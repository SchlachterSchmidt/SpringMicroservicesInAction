spring:
  jpa:
    database: "POSTGRESQL"
    show-sql: "true"
    properties:
      hibernate:
        dialect: "org.hibernate.dialect.PostgreSQLDialect"
        jdbc:
          lob:
            non_contextual_creation: true
  datasource:
    platform: "postgres"
    url: "jdbc:postgresql://organizationservice_database:5432/organizations"
    username: "postgres"
    password: "p0stgr@s"
    testWhileIdle: "true"
    validationQuery: "SELECT 1"
  database:
    driverClassName: "org.postgresql.Driver"

  cloud:
    stream:
      bindings:
        output:
          destination:  orgChangeTopic
          content-type: application/json
      kafka:
        binder:
          zkNodes: localhost
          brokers: localhost

example:
  property: "I AM THE DEFAULT"

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: "http://eurekaservice:8761/eureka/"

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 1000
    updateOrganizationCommandKey:
      circuitBreaker:
        requestVolumeThreshold: 5
        errorThresholdPercentage: 70
  threadpool:
    updateOrganizationThreadPool:
      coreSize: 20
      maxQueueSize: 10
    getOrganizationThreadPool:
      coreSize: 20
      maxQueueSize: 10

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    SpringMicroservicesInAction.OrganizationService: DEBUG
